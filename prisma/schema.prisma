// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

enum COMMITTEE_TYPE {
  PENGURUS_INTI
  BADAN_PENGURUS_HARIAN
}

enum PENGURUS_INTI_TYPE {
  PROJECT_OFFICER
  VICE_PROJECT_OFFICER_INTERNAL
  VICE_PROJECT_OFFICER_EXTERNAL
  SEKRETARIS_UMUM
  CONTROLLER
  TRASURER
  KOORDINATOR_BIDANG_ACARA
  KOORDINATOR_SARANA_DAN_PRASANARANA
  KOORDINATOR_OPERASIONAL
  KOORDINATOR_MATERI_DAN_MENTOR
  KOORDINATOR_KREATIF
  KOORDINATOR_RELASI
}

enum BADAN_PENGURUS_HARIAN_TYPE {
  PROJECT
  SPONSORSHIP
  KESEKRETARIATAN
  PSDM
  ACARA_PUNCAK
  EKSPLORASI
  TRANSPORTASI_DAN_KONSUMSI
  PERIZINAN
  LOGISTIK
  KEAMANAN
  MEDIS
  MEDIA_INFORMASI
  KELEMBAGAAN
  MATERI
  MENTOR
  MEDIA_PARTNER
  IT_DAN_BROADCAST
  DEKORASI_DAN_WARDROBE
  VISUAL_DESIGN_DAN_DOKUMENTASI
}

enum ENTRANCE_METHOD {
  SNBP
  SNBT
  MANDIRI
  BEASISWA
}

enum SPONSOR_PACKAGE {
  SILVER
  GOLD
  PLATINUM
}

model Event {
  id          Int       @id @default(sequence())
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  start_date  DateTime
  end_date    DateTime
  name        String
  description String?
  location    String
  speakers    Speaker[]
  sponsors    Sponsor[]
}

model Committee {
  id                 Int                         @id @default(sequence())
  name               String
  faculty            String
  major              String
  entrance_year      Int
  committee_type     COMMITTEE_TYPE
  pengurus_inti_type PENGURUS_INTI_TYPE?
  bph_type           BADAN_PENGURUS_HARIAN_TYPE?
  group              Group? // Only has group if bphType is MENTOR
}

model Group {
  id        Int       @id @default(sequence())
  number    Int       @unique
  mentor    Committee @relation(fields: [mentor_id], references: [id])
  mentor_id Int       @unique
  mentees   Mentee[]
}

model Mentee {
  id              Int             @id @default(sequence())
  name            String
  faculty         String
  major           String
  entrance_year   Int
  entrance_method ENTRANCE_METHOD
  group           Group           @relation(fields: [group_number], references: [number])
  group_number    Int
}

model Sponsor {
  id      Int             @id @default(sequence())
  name    String
  package SPONSOR_PACKAGE
  events  Event[]

  @@unique([name, package])
}

model Speaker {
  id     Int     @id @default(sequence())
  name   String
  events Event[]
}
